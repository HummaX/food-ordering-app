{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hummas\\\\Desktop\\\\React\\\\food-ordering-app\\\\src\\\\components\\\\Store\\\\CartProvider.jsx\",\n  _s = $RefreshSig$();\nimport CartContext from \"./Cart-Context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nlet cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    // let updateItem = state.items.concat(action.item)\n    // Here we will not use push instead we will use concat because push will add new element to array while concat will merge two arrays into new array\n    let updatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    let existingCartItems = state.items.findIndex(item => item.id === action.item.id);\n    let updatingExistingItem = state.items[existingCartItems];\n    let updatedItems;\n    if (updatingExistingItem) {\n      let updatedItem = {\n        ...updatingExistingItem,\n        amount: updatingExistingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[updatingExistingItem] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item); // this is updateItem\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n  if (action.type === 'Remove') {\n    state.filter(id => id !== action.id);\n  }\n};\nlet CartProvider = props => {\n  _s();\n  let [cartState, dispatcher] = useReducer(cartReducer, defaultCartState);\n  let cartItemRemover = id => {\n    dispatcher({\n      type: 'REMOVE',\n      id: id\n    });\n    console.log(id, 'remover id');\n  };\n  let cartItemAdder = item => {\n    dispatcher({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: cartItemAdder,\n    removeItem: cartItemRemover\n  };\n  console.log(defaultCartState, 'defaut cart state');\n  console.log(cartContext, 'cart context');\n  console.log(cartState, 'cartState');\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 1\n  }, this);\n};\n_s(CartProvider, \"FyYaGEbeIi8bxD3z5X7blaLRVD8=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedAmount","item","price","amount","existingCartItems","findIndex","id","updatingExistingItem","updatedItems","updatedItem","concat","filter","CartProvider","props","_s","cartState","dispatcher","cartItemRemover","console","log","cartItemAdder","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hummas/Desktop/React/food-ordering-app/src/components/Store/CartProvider.jsx"],"sourcesContent":["import CartContext from \"./Cart-Context\"\r\nimport { useReducer } from \"react\"\r\n\r\nlet defaultCartState = {\r\n    items:[],\r\n    totalAmount:0\r\n};\r\n\r\nlet cartReducer = (state,action)=>{\r\n\r\n    if(action.type === 'ADD'){\r\n        // let updateItem = state.items.concat(action.item)\r\n        // Here we will not use push instead we will use concat because push will add new element to array while concat will merge two arrays into new array\r\n        let updatedAmount = state.totalAmount + action.item.price * action.item.amount\r\n        let existingCartItems = state.items.findIndex((item)=> item.id === action.item.id )\r\n        let updatingExistingItem = state.items[existingCartItems]\r\n        \r\n        let updatedItems\r\n\r\n        if(updatingExistingItem){\r\n            let updatedItem={\r\n        ...updatingExistingItem,\r\n        amount: updatingExistingItem.amount + action.item.amount\r\n            }\r\n            updatedItems = [...state.items]\r\n            updatedItems[updatingExistingItem] = updatedItem\r\n        }\r\n        else{\r\n            updatedItems = state.items.concat(action.item) // this is updateItem\r\n        }\r\n        return{\r\n            items: updatedItems,\r\ntotalAmount: updatedAmount\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    if(action.type === 'Remove'){\r\n        state.filter((id => id !== action.id))\r\n    }\r\n}\r\n\r\nlet CartProvider = (props) =>{\r\n\r\nlet [cartState,dispatcher] = useReducer(cartReducer,defaultCartState)\r\n\r\n    let cartItemRemover = (id) =>{\r\n        dispatcher({type:'REMOVE',id:id})\r\n        console.log(id,'remover id')\r\n    }\r\n\r\n    let cartItemAdder = (item) =>{\r\n        dispatcher({type:'ADD',item:item})\r\n    }\r\n\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem:cartItemAdder,\r\n        removeItem:cartItemRemover\r\n    }\r\n\r\nconsole.log(defaultCartState,'defaut cart state')\r\nconsole.log(cartContext,'cart context')\r\nconsole.log(cartState,'cartState')\r\n\r\n    return(\r\n<CartContext.Provider value={cartContext}>\r\n    {props.children}\r\n</CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
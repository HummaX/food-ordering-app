{"ast":null,"code":"'use strict';\n\nconst {\n  Agent: HttpAgent\n} = require('http');\nconst {\n  Agent: HttpsAgent\n} = require('https');\nconst {\n  connect: tlsConnect\n} = require('tls');\nlet Client;\nfor (const ctor of [HttpAgent, HttpsAgent]) {\n  class SSHAgent extends ctor {\n    constructor(connectCfg, agentOptions) {\n      super(agentOptions);\n      this._connectCfg = connectCfg;\n      this._defaultSrcIP = agentOptions && agentOptions.srcIP || 'localhost';\n    }\n    createConnection(options, cb) {\n      const srcIP = options && options.localAddress || this._defaultSrcIP;\n      const srcPort = options && options.localPort || 0;\n      const dstIP = options.host;\n      const dstPort = options.port;\n      if (Client === undefined) Client = require('./client.js');\n      const client = new Client();\n      let triedForward = false;\n      client.on('ready', () => {\n        client.forwardOut(srcIP, srcPort, dstIP, dstPort, (err, stream) => {\n          triedForward = true;\n          if (err) {\n            client.end();\n            return cb(err);\n          }\n          stream.once('close', () => client.end());\n          cb(null, decorateStream(stream, ctor, options));\n        });\n      }).on('error', cb).on('close', () => {\n        if (!triedForward) cb(new Error('Unexpected connection close'));\n      }).connect(this._connectCfg);\n    }\n  }\n  exports[ctor === HttpAgent ? 'SSHTTPAgent' : 'SSHTTPSAgent'] = SSHAgent;\n}\nfunction noop() {}\nfunction decorateStream(stream, ctor, options) {\n  if (ctor === HttpAgent) {\n    // HTTP\n    stream.setKeepAlive = noop;\n    stream.setNoDelay = noop;\n    stream.setTimeout = noop;\n    stream.ref = noop;\n    stream.unref = noop;\n    stream.destroySoon = stream.destroy;\n    return stream;\n  }\n\n  // HTTPS\n  options.socket = stream;\n  const wrapped = tlsConnect(options);\n\n  // This is a workaround for a regression in node v12.16.3+\n  // https://github.com/nodejs/node/issues/35904\n  const onClose = (() => {\n    let called = false;\n    return () => {\n      if (called) return;\n      called = true;\n      if (stream.isPaused()) stream.resume();\n    };\n  })();\n  // 'end' listener is needed because 'close' is not emitted in some scenarios\n  // in node v12.x for some unknown reason\n  wrapped.on('end', onClose).on('close', onClose);\n  return wrapped;\n}","map":{"version":3,"names":["Agent","HttpAgent","require","HttpsAgent","connect","tlsConnect","Client","ctor","SSHAgent","constructor","connectCfg","agentOptions","_connectCfg","_defaultSrcIP","srcIP","createConnection","options","cb","localAddress","srcPort","localPort","dstIP","host","dstPort","port","undefined","client","triedForward","on","forwardOut","err","stream","end","once","decorateStream","Error","exports","noop","setKeepAlive","setNoDelay","setTimeout","ref","unref","destroySoon","destroy","socket","wrapped","onClose","called","isPaused","resume"],"sources":["C:/Users/hummas/Desktop/React/food-ordering-app/node_modules/ssh2/lib/http-agents.js"],"sourcesContent":["'use strict';\n\nconst { Agent: HttpAgent } = require('http');\nconst { Agent: HttpsAgent } = require('https');\nconst { connect: tlsConnect } = require('tls');\n\nlet Client;\n\nfor (const ctor of [HttpAgent, HttpsAgent]) {\n  class SSHAgent extends ctor {\n    constructor(connectCfg, agentOptions) {\n      super(agentOptions);\n\n      this._connectCfg = connectCfg;\n      this._defaultSrcIP = (agentOptions && agentOptions.srcIP) || 'localhost';\n    }\n\n    createConnection(options, cb) {\n      const srcIP = (options && options.localAddress) || this._defaultSrcIP;\n      const srcPort = (options && options.localPort) || 0;\n      const dstIP = options.host;\n      const dstPort = options.port;\n\n      if (Client === undefined)\n        Client = require('./client.js');\n\n      const client = new Client();\n      let triedForward = false;\n      client.on('ready', () => {\n        client.forwardOut(srcIP, srcPort, dstIP, dstPort, (err, stream) => {\n          triedForward = true;\n          if (err) {\n            client.end();\n            return cb(err);\n          }\n          stream.once('close', () => client.end());\n          cb(null, decorateStream(stream, ctor, options));\n        });\n      }).on('error', cb).on('close', () => {\n        if (!triedForward)\n          cb(new Error('Unexpected connection close'));\n      }).connect(this._connectCfg);\n    }\n  }\n\n  exports[ctor === HttpAgent ? 'SSHTTPAgent' : 'SSHTTPSAgent'] = SSHAgent;\n}\n\nfunction noop() {}\n\nfunction decorateStream(stream, ctor, options) {\n  if (ctor === HttpAgent) {\n    // HTTP\n    stream.setKeepAlive = noop;\n    stream.setNoDelay = noop;\n    stream.setTimeout = noop;\n    stream.ref = noop;\n    stream.unref = noop;\n    stream.destroySoon = stream.destroy;\n    return stream;\n  }\n\n  // HTTPS\n  options.socket = stream;\n  const wrapped = tlsConnect(options);\n\n  // This is a workaround for a regression in node v12.16.3+\n  // https://github.com/nodejs/node/issues/35904\n  const onClose = (() => {\n    let called = false;\n    return () => {\n      if (called)\n        return;\n      called = true;\n      if (stream.isPaused())\n        stream.resume();\n    };\n  })();\n  // 'end' listener is needed because 'close' is not emitted in some scenarios\n  // in node v12.x for some unknown reason\n  wrapped.on('end', onClose).on('close', onClose);\n\n  return wrapped;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA,KAAK,EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5C,MAAM;EAAEF,KAAK,EAAEG;AAAW,CAAC,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9C,MAAM;EAAEE,OAAO,EAAEC;AAAW,CAAC,GAAGH,OAAO,CAAC,KAAK,CAAC;AAE9C,IAAII,MAAM;AAEV,KAAK,MAAMC,IAAI,IAAI,CAACN,SAAS,EAAEE,UAAU,CAAC,EAAE;EAC1C,MAAMK,QAAQ,SAASD,IAAI,CAAC;IAC1BE,WAAWA,CAACC,UAAU,EAAEC,YAAY,EAAE;MACpC,KAAK,CAACA,YAAY,CAAC;MAEnB,IAAI,CAACC,WAAW,GAAGF,UAAU;MAC7B,IAAI,CAACG,aAAa,GAAIF,YAAY,IAAIA,YAAY,CAACG,KAAK,IAAK,WAAW;IAC1E;IAEAC,gBAAgBA,CAACC,OAAO,EAAEC,EAAE,EAAE;MAC5B,MAAMH,KAAK,GAAIE,OAAO,IAAIA,OAAO,CAACE,YAAY,IAAK,IAAI,CAACL,aAAa;MACrE,MAAMM,OAAO,GAAIH,OAAO,IAAIA,OAAO,CAACI,SAAS,IAAK,CAAC;MACnD,MAAMC,KAAK,GAAGL,OAAO,CAACM,IAAI;MAC1B,MAAMC,OAAO,GAAGP,OAAO,CAACQ,IAAI;MAE5B,IAAIlB,MAAM,KAAKmB,SAAS,EACtBnB,MAAM,GAAGJ,OAAO,CAAC,aAAa,CAAC;MAEjC,MAAMwB,MAAM,GAAG,IAAIpB,MAAM,EAAE;MAC3B,IAAIqB,YAAY,GAAG,KAAK;MACxBD,MAAM,CAACE,EAAE,CAAC,OAAO,EAAE,MAAM;QACvBF,MAAM,CAACG,UAAU,CAACf,KAAK,EAAEK,OAAO,EAAEE,KAAK,EAAEE,OAAO,EAAE,CAACO,GAAG,EAAEC,MAAM,KAAK;UACjEJ,YAAY,GAAG,IAAI;UACnB,IAAIG,GAAG,EAAE;YACPJ,MAAM,CAACM,GAAG,EAAE;YACZ,OAAOf,EAAE,CAACa,GAAG,CAAC;UAChB;UACAC,MAAM,CAACE,IAAI,CAAC,OAAO,EAAE,MAAMP,MAAM,CAACM,GAAG,EAAE,CAAC;UACxCf,EAAE,CAAC,IAAI,EAAEiB,cAAc,CAACH,MAAM,EAAExB,IAAI,EAAES,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC;MACJ,CAAC,CAAC,CAACY,EAAE,CAAC,OAAO,EAAEX,EAAE,CAAC,CAACW,EAAE,CAAC,OAAO,EAAE,MAAM;QACnC,IAAI,CAACD,YAAY,EACfV,EAAE,CAAC,IAAIkB,KAAK,CAAC,6BAA6B,CAAC,CAAC;MAChD,CAAC,CAAC,CAAC/B,OAAO,CAAC,IAAI,CAACQ,WAAW,CAAC;IAC9B;EACF;EAEAwB,OAAO,CAAC7B,IAAI,KAAKN,SAAS,GAAG,aAAa,GAAG,cAAc,CAAC,GAAGO,QAAQ;AACzE;AAEA,SAAS6B,IAAIA,CAAA,EAAG,CAAC;AAEjB,SAASH,cAAcA,CAACH,MAAM,EAAExB,IAAI,EAAES,OAAO,EAAE;EAC7C,IAAIT,IAAI,KAAKN,SAAS,EAAE;IACtB;IACA8B,MAAM,CAACO,YAAY,GAAGD,IAAI;IAC1BN,MAAM,CAACQ,UAAU,GAAGF,IAAI;IACxBN,MAAM,CAACS,UAAU,GAAGH,IAAI;IACxBN,MAAM,CAACU,GAAG,GAAGJ,IAAI;IACjBN,MAAM,CAACW,KAAK,GAAGL,IAAI;IACnBN,MAAM,CAACY,WAAW,GAAGZ,MAAM,CAACa,OAAO;IACnC,OAAOb,MAAM;EACf;;EAEA;EACAf,OAAO,CAAC6B,MAAM,GAAGd,MAAM;EACvB,MAAMe,OAAO,GAAGzC,UAAU,CAACW,OAAO,CAAC;;EAEnC;EACA;EACA,MAAM+B,OAAO,GAAG,CAAC,MAAM;IACrB,IAAIC,MAAM,GAAG,KAAK;IAClB,OAAO,MAAM;MACX,IAAIA,MAAM,EACR;MACFA,MAAM,GAAG,IAAI;MACb,IAAIjB,MAAM,CAACkB,QAAQ,EAAE,EACnBlB,MAAM,CAACmB,MAAM,EAAE;IACnB,CAAC;EACH,CAAC,GAAG;EACJ;EACA;EACAJ,OAAO,CAAClB,EAAE,CAAC,KAAK,EAAEmB,OAAO,CAAC,CAACnB,EAAE,CAAC,OAAO,EAAEmB,OAAO,CAAC;EAE/C,OAAOD,OAAO;AAChB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
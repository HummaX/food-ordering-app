{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hummas\\\\Desktop\\\\React\\\\food-ordering-app\\\\src\\\\components\\\\Meals\\\\AvailableMeals.jsx\",\n  _s = $RefreshSig$();\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: 'm1',\n  name: 'Sushi',\n  description: 'Finest fish and veggies',\n  price: 22.99\n}, {\n  id: 'm2',\n  name: 'Schnitzel',\n  description: 'A german specialty!',\n  price: 16.5\n}, {\n  id: 'm3',\n  name: 'Barbecue Burger',\n  description: 'American, raw, meaty',\n  price: 12.99\n}, {\n  id: 'm4',\n  name: 'Green Bowl',\n  description: 'Healthy...and green...',\n  price: 18.99\n}];\nlet AvailableMeals = () => {\n  _s();\n  // we can pass meals in props too and can access it via props.meals.name\n  let mealsList = [];\n  let mealListFetcher = async () => {\n    let response = await fetch('https://react-api-project-e7084-default-rtdb.asia-southeast1.firebasedatabase.app/mealsList.json');\n    let hasError = !response.ok ? () => {\n      throw new Error('data not found');\n    } : 'dataFound';\n    console.log(hasError);\n    let data = await response.json();\n    console.log(data, 'fetched data');\n    for (let fetchedData in data) {\n      mealsList.push(data[fetchedData]);\n    }\n  };\n  console.log(mealsList, 'state emals');\n  mealListFetcher();\n  useState(() => {\n    console.log('getting data');\n    console.log(mealsList);\n  }, [mealsList]);\n  let mealsgot = mealsList.map(meals => /*#__PURE__*/_jsxDEV(MealItem, {\n    name: meals.name,\n    description: meals.description,\n    price: meals.price,\n    id: meals.id\n  }, meals.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 46\n  }, this));\n  console.log(DUMMY_MEALS, 'meals got');\n  let mealsList3 = DUMMY_MEALS.map(meals => /*#__PURE__*/_jsxDEV(MealItem, {\n    name: meals.name,\n    description: meals.description,\n    price: meals.price,\n    id: meals.id\n  }, meals.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 50\n  }, this));\n  console.log(DUMMY_MEALS, 'emalslist 3');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.meals,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [mealsgot, mealsList3]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(AvailableMeals, \"8tSLoFzG8X5QurwTRYJ5GstFv6I=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classes","Card","MealItem","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DUMMY_MEALS","id","name","description","price","AvailableMeals","_s","mealsList","mealListFetcher","response","fetch","hasError","ok","Error","console","log","data","json","fetchedData","push","mealsgot","map","meals","fileName","_jsxFileName","lineNumber","columnNumber","mealsList3","children","className","_c","$RefreshReg$"],"sources":["C:/Users/hummas/Desktop/React/food-ordering-app/src/components/Meals/AvailableMeals.jsx"],"sourcesContent":["import classes from './AvailableMeals.module.css'\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem';\r\nimport { useState } from 'react';\r\n\r\nconst DUMMY_MEALS = [\r\n    {\r\n      id: 'm1',\r\n      name: 'Sushi',\r\n      description: 'Finest fish and veggies',\r\n      price: 22.99,\r\n    },\r\n    {\r\n      id: 'm2',\r\n      name: 'Schnitzel',\r\n      description: 'A german specialty!',\r\n      price: 16.5,\r\n    },\r\n    {\r\n      id: 'm3',\r\n      name: 'Barbecue Burger',\r\n      description: 'American, raw, meaty',\r\n      price: 12.99,\r\n    },\r\n    {\r\n      id: 'm4',\r\n      name: 'Green Bowl',\r\n      description: 'Healthy...and green...',\r\n      price: 18.99,\r\n    },\r\n  ];\r\n\r\nlet AvailableMeals = ()=>{\r\n\r\n// we can pass meals in props too and can access it via props.meals.name\r\nlet mealsList = []\r\n\r\nlet mealListFetcher = async()=>{\r\nlet response = await fetch('https://react-api-project-e7084-default-rtdb.asia-southeast1.firebasedatabase.app/mealsList.json')\r\nlet hasError = !response.ok ? (()=>{throw new Error('data not found')}) : 'dataFound'\r\nconsole.log(hasError)\r\nlet data = await response.json()\r\nconsole.log(data,'fetched data')\r\n\r\nfor(let fetchedData in data){\r\n mealsList.push(data[fetchedData])\r\n}\r\n\r\n}\r\n  \r\nconsole.log(mealsList,'state emals')\r\n    mealListFetcher()\r\n    useState(()=>{\r\nconsole.log('getting data')\r\nconsole.log(mealsList)\r\n    },[mealsList])\r\n      let mealsgot = mealsList.map((meals => <MealItem key={meals.id} name={meals.name} description={meals.description} price={meals.price} id={meals.id}/>))\r\n      console.log(DUMMY_MEALS,'meals got')\r\n      let mealsList3 = DUMMY_MEALS.map((meals => <MealItem key={meals.id} name={meals.name} description={meals.description} price={meals.price} id={meals.id}/>))\r\n      console.log(DUMMY_MEALS,'emalslist 3')\r\n    \r\n\r\nreturn(\r\n<>\r\n    <section className={classes.meals}>\r\n        <Card>\r\n        {/* <MealItem/> */}\r\n        {/* {mealsList} */}\r\n        {mealsgot}\r\n        {mealsList3}\r\n        </Card>\r\n\r\n    </section>\r\n\r\n</>\r\n)\r\n}\r\n\r\nexport default AvailableMeals"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
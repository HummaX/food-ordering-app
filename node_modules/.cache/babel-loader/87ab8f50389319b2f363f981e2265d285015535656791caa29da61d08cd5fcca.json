{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\humma\\\\Desktop\\\\React\\\\food-ordering-app\\\\src\\\\components\\\\Cart\\\\CheckOut.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\nimport { useRef } from 'react';\n\n// let isEmpty = (value => value.trim() === '')\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isEmpty = value => {\n  return value.trim() === '';\n};\nlet isHavingFiveCharacters = postalCode => {\n  return postalCode.trim().length !== 5;\n};\nlet CheckOut = props => {\n  _s();\n  let [formValidity, setFormValidity] = useState({\n    fullName: true,\n    address: true,\n    postalCode: true,\n    cityName: true\n  });\n\n  // Start of Refs\n  let fullNameRef = useRef('');\n  let addressRef = useRef('');\n  let postalRef = useRef('');\n  let cityRef = useRef('');\n  let checkOutClose = () => {\n    props.closeCheckOut(true);\n  };\n  let fromEventListener = event => {\n    event.preventDefault();\n    let fullName = fullNameRef.current.value;\n    let address = addressRef.current.value;\n    let postalCode = postalRef.current.value;\n    let cityName = cityRef.current.value;\n    let nameIsValid = !isEmpty(fullName);\n    let addressIsValid = !isEmpty(address);\n    let cityNameIsValid = !isEmpty(cityName);\n    let postalCodeIsValid = !isHavingFiveCharacters(postalCode);\n    let formIsValid = nameIsValid && addressIsValid && cityNameIsValid && postalCodeIsValid;\n    if (!formIsValid) {\n      return console.log('form is not valid');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.form,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.control,\n      onSubmit: fromEventListener,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"fullName\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fullName\",\n        ref: fullNameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Address\",\n        children: \" Street Address \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Address\",\n        ref: addressRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"postal\",\n        ref: postalRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \" City \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: checkOutClose,\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Confirm \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), isEmpty && isHavingFiveCharacters && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please Enter Complete Details \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckOut, \"ZyTeAoufrOJGqgIRvA7ZjIjVR0w=\");\n_c = CheckOut;\nexport default CheckOut;\nvar _c;\n$RefreshReg$(_c, \"CheckOut\");","map":{"version":3,"names":["classes","useRef","jsxDEV","_jsxDEV","isEmpty","value","trim","isHavingFiveCharacters","postalCode","length","CheckOut","props","_s","formValidity","setFormValidity","useState","fullName","address","cityName","fullNameRef","addressRef","postalRef","cityRef","checkOutClose","closeCheckOut","fromEventListener","event","preventDefault","current","nameIsValid","addressIsValid","cityNameIsValid","postalCodeIsValid","formIsValid","console","log","className","form","children","control","onSubmit","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","htmlFor","actions","onClick","_c","$RefreshReg$"],"sources":["C:/Users/humma/Desktop/React/food-ordering-app/src/components/Cart/CheckOut.js"],"sourcesContent":["import classes from './Checkout.module.css'\r\nimport { useRef } from 'react'\r\n\r\n// let isEmpty = (value => value.trim() === '')\r\nlet isEmpty = (value) =>{\r\n    return value.trim() === ''\r\n}\r\n\r\nlet isHavingFiveCharacters = (postalCode) => {\r\n    return postalCode.trim().length !== 5\r\n}\r\n\r\nlet CheckOut = (props)=>{\r\n\r\nlet [formValidity,setFormValidity] = useState({\r\n    fullName:true,\r\n    address:true,\r\n    postalCode:true,\r\n    cityName:true\r\n})\r\n\r\n// Start of Refs\r\nlet fullNameRef= useRef('')\r\nlet addressRef= useRef('')\r\nlet postalRef= useRef('')\r\nlet cityRef= useRef('')\r\n\r\n    let checkOutClose =()=>{\r\n        props.closeCheckOut(true) \r\n    }\r\n\r\n    let fromEventListener = (event)=>{\r\n        event.preventDefault()\r\n        let fullName = fullNameRef.current.value\r\n        let address = addressRef.current.value\r\n        let postalCode = postalRef.current.value\r\n        let cityName = cityRef.current.value\r\n\r\n       let  nameIsValid = !isEmpty(fullName)\r\n       let addressIsValid = !isEmpty(address)\r\n       let cityNameIsValid = !isEmpty(cityName)\r\n       let postalCodeIsValid = !isHavingFiveCharacters(postalCode)\r\n\r\n        let formIsValid = nameIsValid && addressIsValid && cityNameIsValid && postalCodeIsValid\r\n        \r\n\r\n        if(!formIsValid){\r\n            return(console.log('form is not valid'))\r\n        }\r\n    }\r\n\r\nreturn(\r\n    <div className={classes.form}>\r\n        <form className={classes.control} onSubmit={fromEventListener}>\r\n            <label for='fullName'>Your Name</label>\r\n            <input type='text' id='fullName' ref={fullNameRef}></input>\r\n\r\n            <label htmlFor='Address'> Street Address </label>\r\n            <input type='text' id='Address' ref={addressRef}></input>\r\n\r\n            <label htmlFor='postal'>Postal Code</label>\r\n            <input type='number' id='postal' ref={postalRef}></input>\r\n\r\n            <label htmlFor='city'> City </label>\r\n            <input type='text' id='city' ref={cityRef}></input>\r\n\r\n            <div className={classes.actions}>\r\n                <button type='button' onClick={checkOutClose}> Cancel </button>\r\n <button> Confirm </button>\r\n </div>\r\n {isEmpty && isHavingFiveCharacters && <p> Please Enter Complete Details </p>}\r\n        </form>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default CheckOut;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\humma\\\\Desktop\\\\React\\\\food-ordering-app\\\\src\\\\components\\\\Store\\\\CartProvider.jsx\",\n  _s = $RefreshSig$();\nimport CartContext from \"./Cart-Context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet defaultCartState = [{\n  items: [],\n  totalAmount: 0\n}];\nlet cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    let updateItem = state.items.push(action.payload.item);\n    // Here we will not use push instead we will use concat because push will add new element to array while concat will merge two arrays into new array\n    let updatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updateItem,\n      totalAmount: updatedAmount\n    };\n  }\n  if (action.type === 'Remove') {\n    state.filter(id => id !== action.payload.id);\n  }\n};\nlet CartProvider = props => {\n  _s();\n  let [cartState, dispatcher] = useReducer(cartReducer, defaultCartState);\n  let cartItemRemover = id => {\n    dispatcher({\n      type: 'REMOVE',\n      payload: {\n        id: id\n      }\n    });\n  };\n  let cartItemAdder = item => {\n    dispatcher({\n      type: 'ADD',\n      payload: {\n        item: item\n      }\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: cartItemAdder,\n    removeItem: cartItemRemover\n  };\n  console.log(defaultCartState, 'defaut cart state');\n  console.log(cartContext, 'cart context');\n  console.log(cartState, 'cartState');\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }, this);\n};\n_s(CartProvider, \"FyYaGEbeIi8bxD3z5X7blaLRVD8=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateItem","push","payload","item","updatedAmount","price","amount","filter","id","CartProvider","props","_s","cartState","dispatcher","cartItemRemover","cartItemAdder","cartContext","addItem","removeItem","console","log","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/humma/Desktop/React/food-ordering-app/src/components/Store/CartProvider.jsx"],"sourcesContent":["import CartContext from \"./Cart-Context\"\r\nimport { useReducer } from \"react\"\r\n\r\nlet defaultCartState = [{\r\n    items:[],\r\n    totalAmount:0\r\n}]\r\n\r\nlet cartReducer = (state,action)=>{\r\n    if(action.type === 'ADD'){\r\n        let updateItem = state.items.push(action.payload.item)\r\n        // Here we will not use push instead we will use concat because push will add new element to array while concat will merge two arrays into new array\r\n        let updatedAmount = state.totalAmount + action.item.price * action.item.amount\r\n        return{\r\n            items: updateItem,\r\ntotalAmount: updatedAmount\r\n        }\r\n    }\r\n    if(action.type === 'Remove'){\r\n        state.filter((id => id !== action.payload.id))\r\n    }\r\n}\r\n\r\nlet CartProvider = (props) =>{\r\n\r\nlet [cartState,dispatcher] = useReducer(cartReducer,defaultCartState)\r\n\r\n    let cartItemRemover = (id) =>{\r\n        dispatcher({type:'REMOVE',payload:{id:id}})\r\n    }\r\n\r\n    let cartItemAdder = (item) =>{\r\n        dispatcher({type:'ADD',payload:{item:item}})\r\n    }\r\n\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem:cartItemAdder,\r\n        removeItem:cartItemRemover\r\n    }\r\n\r\nconsole.log(defaultCartState,'defaut cart state')\r\nconsole.log(cartContext,'cart context')\r\nconsole.log(cartState,'cartState')\r\n\r\n    return(\r\n<CartContext.Provider value={cartContext}>\r\n    {props.children}\r\n</CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,SAASC,UAAU,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,IAAIC,gBAAgB,GAAG,CAAC;EACpBC,KAAK,EAAC,EAAE;EACRC,WAAW,EAAC;AAChB,CAAC,CAAC;AAEF,IAAIC,WAAW,GAAGA,CAACC,KAAK,EAACC,MAAM,KAAG;EAC9B,IAAGA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAC;IACrB,IAAIC,UAAU,GAAGH,KAAK,CAACH,KAAK,CAACO,IAAI,CAACH,MAAM,CAACI,OAAO,CAACC,IAAI,CAAC;IACtD;IACA,IAAIC,aAAa,GAAGP,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACK,IAAI,CAACE,KAAK,GAAGP,MAAM,CAACK,IAAI,CAACG,MAAM;IAC9E,OAAM;MACFZ,KAAK,EAAEM,UAAU;MAC7BL,WAAW,EAAES;IACL,CAAC;EACL;EACA,IAAGN,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAC;IACxBF,KAAK,CAACU,MAAM,CAAEC,EAAE,IAAIA,EAAE,KAAKV,MAAM,CAACI,OAAO,CAACM,EAAE,CAAE;EAClD;AACJ,CAAC;AAED,IAAIC,YAAY,GAAIC,KAAK,IAAI;EAAAC,EAAA;EAE7B,IAAI,CAACC,SAAS,EAACC,UAAU,CAAC,GAAGvB,UAAU,CAACM,WAAW,EAACH,gBAAgB,CAAC;EAEjE,IAAIqB,eAAe,GAAIN,EAAE,IAAI;IACzBK,UAAU,CAAC;MAACd,IAAI,EAAC,QAAQ;MAACG,OAAO,EAAC;QAACM,EAAE,EAACA;MAAE;IAAC,CAAC,CAAC;EAC/C,CAAC;EAED,IAAIO,aAAa,GAAIZ,IAAI,IAAI;IACzBU,UAAU,CAAC;MAACd,IAAI,EAAC,KAAK;MAACG,OAAO,EAAC;QAACC,IAAI,EAACA;MAAI;IAAC,CAAC,CAAC;EAChD,CAAC;EAGD,MAAMa,WAAW,GAAG;IAChBtB,KAAK,EAACkB,SAAS,CAAClB,KAAK;IACrBC,WAAW,EAACiB,SAAS,CAACjB,WAAW;IACjCsB,OAAO,EAACF,aAAa;IACrBG,UAAU,EAACJ;EACf,CAAC;EAELK,OAAO,CAACC,GAAG,CAAC3B,gBAAgB,EAAC,mBAAmB,CAAC;EACjD0B,OAAO,CAACC,GAAG,CAACJ,WAAW,EAAC,cAAc,CAAC;EACvCG,OAAO,CAACC,GAAG,CAACR,SAAS,EAAC,WAAW,CAAC;EAE9B,oBACJpB,OAAA,CAACH,WAAW,CAACgC,QAAQ;IAACC,KAAK,EAAEN,WAAY;IAAAO,QAAA,EACpCb,KAAK,CAACa;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAEvB,CAAC;AAAAhB,EAAA,CA7BGF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA+BhB,eAAeA,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
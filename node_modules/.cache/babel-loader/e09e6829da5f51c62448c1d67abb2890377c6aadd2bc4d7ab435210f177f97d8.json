{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hummas\\\\Desktop\\\\React\\\\food-ordering-app\\\\src\\\\components\\\\Store\\\\CartProvider.jsx\",\n  _s = $RefreshSig$();\nimport CartContext from \"./Cart-Context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nlet cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    let existingCartItems = action.item.findIndex(item => {\n      return item.id === state.items.id;\n    });\n    let updatingExistingItem = state.items[existingCartItems];\n    let updatedItem;\n    let updatedItems;\n    if (updatingExistingItem) {\n      updatedItem = {\n        ...updatingExistingItem,\n        Amount: updatingExistingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[updatingExistingItem] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item); // this is updateItem\n    }\n\n    // let updateItem = state.items.concat(action.item)\n    // Here we will not use push instead we will use concat because push will add new element to array while concat will merge two arrays into new array\n    let updatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItem,\n      totalAmount: updatedAmount\n    };\n  }\n  if (action.type === 'Remove') {\n    state.filter(id => id !== action.id);\n  }\n};\nlet CartProvider = props => {\n  _s();\n  let [cartState, dispatcher] = useReducer(cartReducer, defaultCartState);\n  let cartItemRemover = id => {\n    dispatcher({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  let cartItemAdder = item => {\n    dispatcher({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: cartItemAdder,\n    removeItem: cartItemRemover\n  };\n  console.log(defaultCartState, 'defaut cart state');\n  console.log(cartContext, 'cart context');\n  console.log(cartState, 'cartState');\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 1\n  }, this);\n};\n_s(CartProvider, \"FyYaGEbeIi8bxD3z5X7blaLRVD8=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItems","item","findIndex","id","updatingExistingItem","updatedItem","updatedItems","Amount","amount","concat","updatedAmount","price","filter","CartProvider","props","_s","cartState","dispatcher","cartItemRemover","cartItemAdder","cartContext","addItem","removeItem","console","log","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hummas/Desktop/React/food-ordering-app/src/components/Store/CartProvider.jsx"],"sourcesContent":["import CartContext from \"./Cart-Context\"\r\nimport { useReducer } from \"react\"\r\n\r\nlet defaultCartState = {\r\n    items:[],\r\n    totalAmount:0\r\n};\r\n\r\nlet cartReducer = (state,action)=>{\r\n\r\n    if(action.type === 'ADD'){\r\n\r\n        let existingCartItems = action.item.findIndex((item)=>{return item.id === state.items.id})\r\n        let updatingExistingItem = state.items[existingCartItems]\r\n        \r\n        let updatedItem;\r\n        let updatedItems\r\n\r\n        if(updatingExistingItem){\r\n            updatedItem={\r\n        ...updatingExistingItem,\r\n        Amount: updatingExistingItem.amount + action.item.amount\r\n            }\r\n            updatedItems = [...state.items]\r\n            updatedItems[updatingExistingItem] = updatedItem\r\n        }\r\n        else{\r\n            updatedItems = state.items.concat(action.item) // this is updateItem\r\n        }\r\n\r\n        // let updateItem = state.items.concat(action.item)\r\n        // Here we will not use push instead we will use concat because push will add new element to array while concat will merge two arrays into new array\r\n        let updatedAmount = state.totalAmount + action.item.price * action.item.amount\r\n        return{\r\n            items: updatedItem,\r\ntotalAmount: updatedAmount\r\n        }\r\n    }\r\n    if(action.type === 'Remove'){\r\n        state.filter((id => id !== action.id))\r\n    }\r\n}\r\n\r\nlet CartProvider = (props) =>{\r\n\r\nlet [cartState,dispatcher] = useReducer(cartReducer,defaultCartState)\r\n\r\n    let cartItemRemover = (id) =>{\r\n        dispatcher({type:'REMOVE',id:id})\r\n    }\r\n\r\n    let cartItemAdder = (item) =>{\r\n        dispatcher({type:'ADD',item:item})\r\n    }\r\n\r\n\r\n    const cartContext = {\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem:cartItemAdder,\r\n        removeItem:cartItemRemover\r\n    }\r\n\r\nconsole.log(defaultCartState,'defaut cart state')\r\nconsole.log(cartContext,'cart context')\r\nconsole.log(cartState,'cartState')\r\n\r\n    return(\r\n<CartContext.Provider value={cartContext}>\r\n    {props.children}\r\n</CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hummas\\\\Desktop\\\\React\\\\food-ordering-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport { useShell } from 'react-ssh2-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // setInterval(()=>{const conn = new Client();\n  // conn.on('ready', () => {\n  //   console.log('Client :: ready');\n  //   conn.exec('free -g', (err, stream) => {\n  //     if (err) throw err;\n  //     stream.on('close', (code, signal) => {\n  //       console.log('Stream :: close :: code: ' + code + ', signal: ' + signal);\n  //       conn.end();\n  //     }).on('data', (data) => {\n  //       console.log('STDOUT: ' + data,'data 1' ,data.mem);\n  //     }).stderr.on('data', (data) => {\n  //       console.log('STDERR: ' + data,'data 2');\n  //     });\n  //   });\n  // }).connect({\n  //   host: '128.199.138.4',\n  //   port: 22,\n  //   username: 'root',\n  //   password: 'Hummas123A!a'\n  // });},1000)\n\n  const {\n    initShell,\n    stream\n  } = useShell({\n    // See ssh2 lib documentation\n    config: {\n      host: 'host',\n      username: 'username',\n      password: 'password'\n    },\n    window: {\n      term: 'xterm-256color'\n    },\n    onConnect: () => console.log('connected'),\n    onData: data => console.log(data),\n    onClose: () => console.log('closed'),\n    onError: err => console.error(err)\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Meals, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"i9JGyBuMymdqqLMFES37mlqQz7M=\", false, function () {\n  return [useShell];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Meals","Cart","useShell","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","initShell","stream","config","host","username","password","window","term","onConnect","console","log","onData","data","onClose","onError","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hummas/Desktop/React/food-ordering-app/src/App.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Header from \"./components/Layout/Header\";\r\nimport Meals from \"./components/Meals/Meals\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport {useShell} from 'react-ssh2-hook'\r\n\r\n\r\nfunction App() {\r\n\r\n  // setInterval(()=>{const conn = new Client();\r\n  // conn.on('ready', () => {\r\n  //   console.log('Client :: ready');\r\n  //   conn.exec('free -g', (err, stream) => {\r\n  //     if (err) throw err;\r\n  //     stream.on('close', (code, signal) => {\r\n  //       console.log('Stream :: close :: code: ' + code + ', signal: ' + signal);\r\n  //       conn.end();\r\n  //     }).on('data', (data) => {\r\n  //       console.log('STDOUT: ' + data,'data 1' ,data.mem);\r\n  //     }).stderr.on('data', (data) => {\r\n  //       console.log('STDERR: ' + data,'data 2');\r\n  //     });\r\n  //   });\r\n  // }).connect({\r\n  //   host: '128.199.138.4',\r\n  //   port: 22,\r\n  //   username: 'root',\r\n  //   password: 'Hummas123A!a'\r\n  // });},1000)\r\n  \r\n  const { initShell, stream } = useShell({\r\n    // See ssh2 lib documentation\r\n    config: {host: 'host', username: 'username', password: 'password'},\r\n    window: { term: 'xterm-256color' },\r\n    onConnect: () => console.log('connected'),\r\n    onData: (data) => console.log(data),\r\n    onClose: () => console.log('closed'),\r\n    onError: (err) => console.error(err),\r\n  });\r\n\r\n  return (\r\n    <>\r\n   <Header/>\r\n   <Meals/>\r\n   <Cart/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,SAAQC,QAAQ,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGR,QAAQ,CAAC;IACrC;IACAS,MAAM,EAAE;MAACC,IAAI,EAAE,MAAM;MAAEC,QAAQ,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAU,CAAC;IAClEC,MAAM,EAAE;MAAEC,IAAI,EAAE;IAAiB,CAAC;IAClCC,SAAS,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACzCC,MAAM,EAAGC,IAAI,IAAKH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IACnCC,OAAO,EAAEA,CAAA,KAAMJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACpCI,OAAO,EAAGC,GAAG,IAAKN,OAAO,CAACO,KAAK,CAACD,GAAG;EACrC,CAAC,CAAC;EAEF,oBACEpB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACDtB,OAAA,CAACL,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACT1B,OAAA,CAACJ,KAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACR1B,OAAA,CAACH,IAAI;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBACH;AAEP;AAACtB,EAAA,CAxCQD,GAAG;EAAA,QAuBoBL,QAAQ;AAAA;AAAA6B,EAAA,GAvB/BxB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}